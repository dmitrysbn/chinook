1: Find the albums recorded by the artist Queen.
Album.where(artist_id: Artist.find_by(name: 'Queen').id)

2: Count how many tracks belong to the media type "Protected MPEG-4 video file".
Track.where(media_type_id: Media_type.find_by(name: "Protected MPEG-4 video file").id).count

3: Find the genre with the name "Hip Hop/Rap".
Genre.find_by(name: "Hip Hop/Rap")

4: Count how many tracks belong to the "Hip Hop/Rap" genre.
Track.where(genre_id: 17).count

5: Find the total amount of time required to listen to all the tracks in the database.
Track.sum(:milliseconds)

6: Find the highest price of any track that has the media type "MPEG audio file".
Track.where(media_type_id: MediaType.where(name: "MPEG audio file")).maximum(:unit_price)

7: Find the name of the most expensive track that has the media type "MPEG audio file".
Track.find_by(unit_price: Track.where(media_type_id: MediaType.where(name: "MPEG audio file")).maximum(:unit_price), media_type_id: MediaType.where(name: "MPEG audio file")).name

8: Find the 2 oldest artists.
Artist.order(:created_at)[0..1]

9: Find the least expensive track that has the genre "Electronica/Dance".
Track.find_by(genre_id: Genre.find_by(name: "Electronica/Dance").id, unit_price: Track.where(genre_id: Genre.find_by(name: "Electronica/Dance")).minimum(:unit_price))

10: Find all "MPEG audio file" tracks in the genre "Electronica/Dance".
Track.where(genre_id: Genre.find_by(name: "Electronica/Dance").id, media_type_id: MediaType.where(name: "MPEG audio file"))

Part 1 Stretch 1: Find all the albums whose titles start with B.
Album.where("title LIKE ?", 'B%'')

Part 1 Stretch 2: Find the all the artists whose names start with A.
Artist.where("name LIKE ?", 'A%')

Part 2 Stretch 1: Find the albums recorded by the artist Queen.
SELECT * FROM albums WHERE artist_id=(SELECT id FROM artists WHERE name='Queen');

Part 2 Stretch 2: Count how many tracks belong to the media type "Protected MPEG-4 video file".
SELECT COUNT(*) FROM tracks WHERE media_type_id=(SELECT id FROM media_types WHERE name='Protected MPEG-4 video file');

Part 2 Stretch 3: Find the least expensive track that has the genre "Electronica/Dance".
SELECT MIN(unit_price) FROM tracks WHERE genre_id=(SELECT id FROM genres WHERE name='Electronica/Dance');

Part 2 Stretch 4: Find the all the artists whose names start with A.
SELECT * FROM artists WHERE name LIKE 'A%';

Part 2 Stretch 5: Find all the tracks that belong to playlist 1.
SELECT * FROM tracks WHERE id IN (SELECT track_id FROM playlists_tracks WHERE playlist_id='1');
